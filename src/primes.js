// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Caml_int32 from "bs-platform/lib/es6/caml_int32.js";

function run_with_elapsed_time(f) {
  var start = new Date().getTime();
  var num = Curry._1(f, undefined);
  var finish = new Date().getTime();
  return [
          num,
          (finish - start) / 1000
        ];
}

function is_prime(num) {
  if (num === 2) {
    return true;
  }
  if (num % 2 === 0) {
    return false;
  }
  var lim = Math.sqrt(num) + 0.5 | 0;
  var _curr = 3;
  while(true) {
    var curr = _curr;
    if (curr > lim) {
      return true;
    }
    if (Caml_int32.mod_(num, curr) === 0) {
      return false;
    }
    _curr = curr + 2 | 0;
    continue ;
  };
}

function next_prime(num) {
  var _next = num;
  while(true) {
    var next = _next;
    if (is_prime(next)) {
      return next;
    }
    _next = next + 1 | 0;
    continue ;
  };
}

var ta = document.createElement("textarea");

ta.readOnly = true;

ta.cols = 40;

ta.rows = 5;

document.body.appendChild(ta);

var match = run_with_elapsed_time(function (param) {
      var _curr = 1;
      var _count = 0;
      while(true) {
        var count = _count;
        var curr = _curr;
        if (count > 99999) {
          return curr;
        }
        _count = count + 1 | 0;
        _curr = next_prime(curr + 1 | 0);
        continue ;
      };
    });

ta.value = "Elapsed time: " + match[1] + "\n" + match[0];

export {
  run_with_elapsed_time ,
  is_prime ,
  next_prime ,
  
}
/* ta Not a pure module */
