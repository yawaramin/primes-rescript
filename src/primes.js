// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Caml_int32 from "bs-platform/lib/es6/caml_int32.js";

function is_prime(num) {
  if (num === 2) {
    return true;
  }
  if (num % 2 === 0) {
    return false;
  }
  var lim = Math.sqrt(num) + 0.5 | 0;
  var _curr = 3;
  while(true) {
    var curr = _curr;
    if (curr > lim) {
      return true;
    }
    if (Caml_int32.mod_(num, curr) === 0) {
      return false;
    }
    _curr = curr + 2 | 0;
    continue ;
  };
}

function next_prime(num) {
  var _next = num;
  while(true) {
    var next = _next;
    if (is_prime(next)) {
      return next;
    }
    _next = next + 1 | 0;
    continue ;
  };
}

function lp(_curr, _count) {
  while(true) {
    var count = _count;
    var curr = _curr;
    if (count > 99999) {
      return curr;
    }
    _count = count + 1 | 0;
    _curr = next_prime(curr + 1 | 0);
    continue ;
  };
}

var start = new Date().getTime();

var result = lp(1, 0);

var finish = new Date().getTime();

var elapsed = (finish - start) / 1000;

console.log("Result: " + result + ", time: " + elapsed);

export {
  is_prime ,
  next_prime ,
  
}
/* start Not a pure module */
